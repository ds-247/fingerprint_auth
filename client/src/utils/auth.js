import axios from "axios";
import { startRegistration } from "@simplewebauthn/browser";

let rawId;
export async function signup(params) {
  const email = params.email;

  // Get challenge from server
  const { data: initResponse } = await axios.get(
    `http://localhost:5000/init-registration?email=${email}`,
    { withCredentials: true }
  );

  const options = await initResponse;

  console.log(options);
  // create pass key
  const registrationJson = await startRegistration(options);

  // save pass key in db
  const { data: verifyResponse } = await axios.post(
    "http://localhost:5000/verify-registration",
    registrationJson, // directly passing the object
    { withCredentials: true } // preserves cookies for cross-origin requests
  );


  console.log(verifyResponse)
}

export async function login(params) {
  const email = params.email;

  const publicKey = {
    challenge: new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8]), // A random value generated by the server
    allowCredentials: [
      {
        id: rawId, // The credential ID returned during registration
        type: "public-key",
      },
    ],
    timeout: 60000,
  };

  try {
    const assertion = await navigator.credentials.get({ publicKey });
    console.log("Authentication successful", assertion);
    // Send `assertion` to the server for verification
  } catch (err) {
    console.error("Authentication failed", err);
  }
}
